"""modificaciones para el soporte de prestamos del instructor

Revision ID: 5eb54d196f7c
Revises: 
Create Date: 2025-09-14 23:24:17.417918

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5eb54d196f7c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('centers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('environments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('center_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=200), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('qr_code', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['center_id'], ['centers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('qr_code')
    )
    op.create_table('inventory_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('internal_code', sa.String(length=50), nullable=False),
    sa.Column('category', sa.String(length=20), nullable=False),
    sa.Column('brand', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('purchase_date', sa.Date(), nullable=True),
    sa.Column('warranty_expiry', sa.Date(), nullable=True),
    sa.Column('last_maintenance', sa.Date(), nullable=True),
    sa.Column('next_maintenance', sa.Date(), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('quantity_damaged', sa.Integer(), nullable=False),
    sa.Column('quantity_missing', sa.Integer(), nullable=False),
    sa.Column('item_type', sa.String(length=10), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("category IN ('computer', 'projector', 'keyboard', 'mouse', 'tv', 'camera', 'microphone', 'tablet', 'other')", name='check_category'),
    sa.CheckConstraint("item_type IN ('individual', 'group')", name='check_item_type'),
    sa.CheckConstraint("status IN ('available', 'in_use', 'maintenance', 'damaged', 'lost', 'missing', 'good')", name='check_status'),
    sa.CheckConstraint('quantity >= 0', name='check_quantity'),
    sa.CheckConstraint('quantity_damaged >= 0', name='check_quantity_damaged'),
    sa.CheckConstraint('quantity_missing >= 0', name='check_quantity_missing'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('internal_code'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('program', sa.String(length=100), nullable=True),
    sa.Column('ficha', sa.String(length=20), nullable=True),
    sa.Column('environment_id', sa.UUID(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_login', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("role IN ('student', 'instructor', 'supervisor', 'admin', 'admin_general')", name='check_role'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('alert_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=True),
    sa.Column('threshold_value', sa.Integer(), nullable=True),
    sa.Column('notification_methods', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint('alert_type IS NOT NULL', name='check_alert_type'),
    sa.CheckConstraint('is_enabled IN (true, false)', name='check_is_enabled'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'alert_type', name='uq_alert_setting_user_id_alert_type')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('old_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('new_values', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('ip_address', postgresql.INET(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('session_id', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feedback',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('steps_to_reproduce', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('admin_response', sa.Text(), nullable=True),
    sa.Column('include_device_info', sa.Boolean(), nullable=True),
    sa.Column('include_logs', sa.Boolean(), nullable=True),
    sa.Column('allow_follow_up', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("priority IN ('low', 'medium', 'high')", name='check_priority'),
    sa.CheckConstraint("status IN ('submitted', 'reviewed', 'in_progress', 'completed', 'rejected')", name='check_status'),
    sa.CheckConstraint("type IN ('bug', 'suggestion', 'feature', 'compliment', 'complaint', 'other')", name='check_type'),
    sa.CheckConstraint('rating BETWEEN 1 AND 5', name='check_rating'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('generated_reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('parameters', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_format', sa.String(length=10), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('generated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("file_format IN ('pdf', 'excel', 'csv')", name='check_file_format'),
    sa.CheckConstraint("status IN ('generating', 'completed', 'failed')", name='check_status'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory_check_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('quantity_expected', sa.Integer(), nullable=True),
    sa.Column('quantity_found', sa.Integer(), nullable=True),
    sa.Column('quantity_damaged', sa.Integer(), nullable=True),
    sa.Column('quantity_missing', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("status IN ('good', 'damaged', 'missing')", name='check_status'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('loans',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=True),
    sa.Column('admin_id', sa.UUID(), nullable=True),
    sa.Column('item_name', sa.String(length=200), nullable=True),
    sa.Column('item_description', sa.Text(), nullable=True),
    sa.Column('item_category', sa.String(length=50), nullable=True),
    sa.Column('is_registered_item', sa.Boolean(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=True),
    sa.Column('program', sa.String(length=100), nullable=False),
    sa.Column('purpose', sa.Text(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('actual_return_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('priority', sa.String(length=10), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('acta_pdf_path', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("priority IN ('alta', 'media', 'baja')", name='check_priority'),
    sa.CheckConstraint("status IN ('pending', 'approved', 'rejected', 'active', 'returned', 'overdue')", name='check_status'),
    sa.CheckConstraint('(item_id IS NOT NULL AND is_registered_item = true) OR (item_name IS NOT NULL AND is_registered_item = false)', name='check_item_reference'),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('assigned_technician_id', sa.UUID(), nullable=True),
    sa.Column('environment_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('priority', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('location', sa.String(length=200), nullable=True),
    sa.Column('estimated_completion', sa.Date(), nullable=True),
    sa.Column('actual_completion', sa.Date(), nullable=True),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('images_urls', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('quantity_affected', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("priority IN ('low', 'medium', 'high', 'urgent', 'baja', 'media', 'alta', 'urgente')", name='check_priority'),
    sa.CheckConstraint("status IN ('pending', 'assigned', 'in_progress', 'completed', 'cancelled')", name='check_status'),
    sa.CheckConstraint('(item_id IS NOT NULL) OR (environment_id IS NOT NULL)', name='check_item_or_environment'),
    sa.ForeignKeyConstraint(['assigned_technician_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('action_url', sa.String(length=500), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("priority IN ('low', 'medium', 'high')", name='check_priority'),
    sa.CheckConstraint("type IN ('loan_approved', 'loan_rejected', 'loan_overdue', 'check_reminder', 'maintenance_request', 'maintenance_update', 'verification_pending', 'alert', 'system', 'verification_update')", name='check_type'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=False),
    sa.Column('instructor_id', sa.UUID(), nullable=False),
    sa.Column('program', sa.String(length=100), nullable=False),
    sa.Column('ficha', sa.String(length=20), nullable=False),
    sa.Column('topic', sa.String(length=200), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=False),
    sa.Column('end_time', sa.Time(), nullable=False),
    sa.Column('day_of_week', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('student_count', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint('day_of_week BETWEEN 1 AND 7', name='check_day_of_week'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('system_alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('is_resolved', sa.Boolean(), nullable=True),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('resolved_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("severity IN ('low', 'medium', 'high', 'critical')", name='check_severity'),
    sa.CheckConstraint("type IN ('low_stock', 'maintenance_overdue', 'equipment_missing', 'loan_overdue', 'verification_pending')", name='check_type'),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=True),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('timezone', sa.String(length=50), nullable=True),
    sa.Column('notifications_enabled', sa.Boolean(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('push_notifications', sa.Boolean(), nullable=True),
    sa.Column('auto_save', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', name='uq_user_setting_user_id')
    )
    op.create_table('inventory_checks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('environment_id', sa.UUID(), nullable=False),
    sa.Column('student_id', sa.UUID(), nullable=False),
    sa.Column('instructor_id', sa.UUID(), nullable=True),
    sa.Column('supervisor_id', sa.UUID(), nullable=True),
    sa.Column('schedule_id', sa.UUID(), nullable=True),
    sa.Column('check_date', sa.Date(), nullable=False),
    sa.Column('check_time', sa.Time(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('total_items', sa.Integer(), nullable=True),
    sa.Column('items_good', sa.Integer(), nullable=True),
    sa.Column('items_damaged', sa.Integer(), nullable=True),
    sa.Column('items_missing', sa.Integer(), nullable=True),
    sa.Column('is_clean', sa.Boolean(), nullable=True),
    sa.Column('is_organized', sa.Boolean(), nullable=True),
    sa.Column('inventory_complete', sa.Boolean(), nullable=True),
    sa.Column('cleaning_notes', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('instructor_comments', sa.Text(), nullable=True),
    sa.Column('supervisor_comments', sa.Text(), nullable=True),
    sa.Column('student_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('instructor_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('supervisor_confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint("status IN ('student_pending', 'instructor_review', 'supervisor_review', 'complete', 'issues', 'rejected')", name='check_status'),
    sa.ForeignKeyConstraint(['environment_id'], ['environments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['instructor_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('maintenance_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('request_id', sa.UUID(), nullable=True),
    sa.Column('technician_id', sa.UUID(), nullable=True),
    sa.Column('maintenance_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('parts_replaced', sa.Text(), nullable=True),
    sa.Column('maintenance_date', sa.Date(), nullable=False),
    sa.Column('next_maintenance_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("maintenance_type IN ('preventive', 'corrective', 'upgrade')", name='check_maintenance_type'),
    sa.ForeignKeyConstraint(['item_id'], ['inventory_items.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['request_id'], ['maintenance_requests.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['technician_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supervisor_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('check_id', sa.UUID(), nullable=False),
    sa.Column('supervisor_id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('reviewed_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.CheckConstraint("status IN ('pending', 'approved', 'rejected')", name='check_status'),
    sa.ForeignKeyConstraint(['check_id'], ['inventory_checks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['supervisor_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supervisor_reviews')
    op.drop_table('maintenance_history')
    op.drop_table('inventory_checks')
    op.drop_table('user_settings')
    op.drop_table('system_alerts')
    op.drop_table('schedules')
    op.drop_table('notifications')
    op.drop_table('maintenance_requests')
    op.drop_table('loans')
    op.drop_table('inventory_check_items')
    op.drop_table('generated_reports')
    op.drop_table('feedback')
    op.drop_table('audit_logs')
    op.drop_table('alert_settings')
    op.drop_table('users')
    op.drop_table('inventory_items')
    op.drop_table('environments')
    op.drop_table('centers')
    # ### end Alembic commands ###
